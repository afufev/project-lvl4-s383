- const getInputName = (f, property) => `${f.name}[${property}]`

mixin formFor(f, options = {})
  - const url = _.get(options, 'url');
  - const method = _.get(options, 'method', 'get').toLowerCase();
  - const isStandart = _.includes(['get', 'post'], method);
      form.simple_form.needs-validation(novalidate action= url method= isStandart ? method : 'post')
        if !isStandart
          input(name='_method' type='hidden' value= method)
        block form-content

mixin input(f, property, options = { as: 'text' })
  - const value = f.object[property] === undefined ? '' : f.object[property]
  .form-group
    input.form-control.required(
      class= `${property} ${(f.errors[property] && 'is-invalid')}`
      name=getInputName(f, property) type=options['as'] value= value placeholder= property
    )
    if f.errors[property]
      .invalid-feedback= f.errors[property].map(({ message }) => message).join('. ')

mixin button(f, type = 'submit')
  input.btn.btn-primary.btn-block(type=`${type}` value=`Save`)
