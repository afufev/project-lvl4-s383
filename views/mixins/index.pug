mixin modal(options = {})
  - const url = _.get(options, 'url');
  - const name = _.get(options, 'name');
  - const target = _.get(options, 'target');
  .modal.fade(id= target role='dialog' aria-labelledby='exampleModalLabel' aria-hidden='true')
    .modal-dialog(role='document')
      .modal-content
        .modal-header
          h5.modal-title#exampleModalLabel ATTENTION
          button.close(type='button' data-dismiss='modal' aria-label='Close')
            span(aria-hidden='true') &times;
        .modal-body
          p= `Are you sure you want to DELETE ${name}?`
        .modal-footer
          button.btn.btn-secondary(type='button' data-dismiss='modal') No, I don't want
          a.btn.btn-danger(href= url data-method='delete' rel='nofollow')= `Delete ${name}`

mixin order(filter, property, title)
  - const prevOrderBy = _.get(filter, 'orderBy');
  - const prevDirection = _.get(filter, 'orderDirection');
  - const query = Object.assign({}, filter, { orderBy: property, prevOrderBy, prevDirection });
  - const isAscending = prevDirection === 'ASC'
  - const isActive = property === prevOrderBy;
  li.nav-item
    div(class={ 'dropup': (isActive && isAscending)  })
      a.nav-link(
        class={ 'active': isActive }
        class={ 'dropdown-toggle': isActive }
        href= urlFor('tasks', { query })
      )= title

mixin pagination(paginationObject)
  - const firstLink = _.get(paginationObject, 'firstLink');
  - const lastLink = _.get(paginationObject, 'lastLink');
  - const chunk = _.get(paginationObject, 'chunk');
  nav
    ul.pagination
      li.page-item
        a.page-link(href= urlFor('tasks', { query: firstLink.query }))
            span(aria-hidden='true') &laquo;
      each item in chunk
        li.page-item(class={ active: item.isActive })
          a.page-link(href= urlFor('tasks', { query: item.query }))= item.number
      li.page-item
        a.page-link(href= urlFor('tasks', { query: lastLink.query }))
          span(aria-hidden='true') &raquo;
