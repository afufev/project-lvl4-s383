extends /layouts/tables.pug

block table-content
    .row.mt-2.justify-content-between
      .col-12.col-md-auto
        ul.nav
          li.nav-item
            p.pt-2 Sort by:
          +order(searchForm, 'createdAt', 'Created at')
          +order(searchForm, 'updatedAt', 'Updated at')
          +order(searchForm, 'creatorId', 'Creator')
          +order(searchForm, 'assigneeId', 'Assignee')
          +order(searchForm, 'statusId', 'Status')
      .col-12.col-md-auto
        button.btn.dropdown-toggle.btn-sm.btn-outline-secondary.my-2(type="button" data-toggle="collapse" data-target="#collapseFilter") Filter
      .collapse#collapseFilter
        form(action= urlFor('tasks') method='get')
          .row.justify-content-center.col-sm-12
            h6.mb-3 Filter by
            .form-row
              .col
                .form-group.col-md-9.border-left.mx-5.col-12
                  label.h7 Status
                  +select('Status', { name: 'statusId', choices: statuses, title: 'name', selected: searchForm.statusId })
              .col
                .form-group.col-md-9.border-left.mx-5.col-12
                  label.h7 Assignee
                  +select('Assignee', { name: 'assigneeId', choices: users, title: 'fullName', selected: searchForm.assigneeId })
              .col
                .form-group.col-md-9.border-left.mx-5.col-12
                  label.h7 Creator
                  +select('Creator', { name: 'creatorId', choices: users, title: 'fullName', selected: searchForm.creatorId })
          .row.justify-content-center Tags
            .col-md-7
              .form-group
                // label Tags
                input.form-control.form-control-sm(type= 'search' placeholder='Filter tags' name='tagsQuery')
          .row.justify-content-center
            .col-md-1.ml-4
              input.btn.btn-outline-success.btn-sm(type= 'submit' value= 'Apply')
      // if isSignedIn()
      //   .col-12.col-md-auto
      //     .btn-group(role='group')
      //       a.btn.btn-secondary(href= urlFor('tasks', { query: { creatorId: currentUser }}) class={ 'active': (searchForm.creatorId === currentUser) }) Created
      //       a.btn.btn-secondary(href= urlFor('tasks', { query: { assigneeId: currentUser }}) class={ 'active': (searchForm.assigneeId === currentUser) }) Assigned
    .row.mt-2
      .col-12
        .card.mb-3
          .card-body.table-responsive-md.p-0
            table.table.table-hover.table-borderless.p-0.m-0(style={'font-size': '.875rem'})
              thead.thead-light
                tr
                th(scope= 'col') Status
                th(colspan= '2') Task
                // th(scope= 'col') Tags
                th(scope= 'col') Assignee
                  // th(scope= 'col') Task
                  // +thFilter('Creator', { name: 'creatorId', choices: users, title: 'fullName', selected: searchForm.creatorId })
                  // +thFilter('Status', { name: 'statusId', choices: statuses, title: 'name', selected: searchForm.statusId })
                  // +thFilter('Assignee', { name: 'assigneeId', choices: users, title: 'fullName', selected: searchForm.assigneeId })
              tbody
                each task in tasks
                  - const id = task.id ? task.id : task.dataValues.id
                  - const name = task.name ? task.name : task.dataValues.name
                  - const status =  task.status ?  task.status.name : ''
                  tr
                    td= `[[${status}]]`
                    td(colspan='2')
                      .row.pl-4.pt-2
                        a.h6.font-weight-bold(href= urlFor('showTask', { id }))= name
                        each tag in task.Tags
                          a.badge.badge-info.mt-1.mb-2.ml-1(href= urlFor('tasks', { query: { tagsQuery: tag.name } }))= `#${tag.name}`
                      .row.pl-4(style={'font-size': '.8rem'})= `#${task.id} created on ${formatDate(task.createdAt)} by`
                        a.pl-1(href= urlFor('showUser', { id: task.creator.id }))= task.creator.fullName
                    td
                      if task.assignee.fullName
                        a(href= urlFor('showUser', { id: task.assignee.id }))= task.assignee.fullName
                      else
                        ='any'
    .row
      .col-12
        +pagination('tasks', paginationObject)
