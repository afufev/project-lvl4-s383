- const getInputName = (f, property) => `${f.name}[${property}]`

mixin formFor(f, options = {})
  - const url = _.get(options, 'url');
  - const method = _.get(options, 'method', 'get').toLowerCase();
  - const isStandart = _.includes(['get', 'post'], method);
  form.simple_form.needs-validation(novalidate action= url method= isStandart ? method : 'post')
    if !isStandart
      input(name='_method' type='hidden' value= method)
    block form-content

mixin input(f, property, options = { as: 'text' })
  - const value = f.object[property] === undefined ? '' : f.object[property]
  - const title = options.title ? options.title : property
  input.form-control.form-control-sm.required(
    class= `${property} ${(f.errors[property] && 'is-invalid')}`
    name=getInputName(f, property) type=options['as'] value= value placeholder= title
  )
  if f.errors[property]
    .invalid-feedback= f.errors[property].map(({ message }) => message).join('. ')

mixin textarea(f, property, options = { as: 'text' })
  - const value = f.object.dataValues[property] === undefined ? '' : f.object.dataValues[property]
  - const title = options.title ? options.title : property
  .form-group.row
    label.col-sm-2.col-form-label= title
    .col-sm-10
      textarea.form-control.form-control-sm.required(
        class= `${property} ${(f.errors[property] && 'is-invalid')}`
        name=getInputName(f, property) type=options['as'] placeholder= title rows='5'
      )= value
    if f.errors[property]
      .invalid-feedback= f.errors[property].map(({ message }) => message).join('. ')

mixin button(f, value='Save', type = 'submit')
  input.btn.btn-primary(type=`${type}` value=`${value}`)

mixin select(property, options = {})
  select.form-control.form-control-sm(name= options.name)
    each choice in options.choices
      option(value= choice.id selected= (choice.id === options.selected))= choice[options.title]

// mixin switch()

mixin thFilter(property, options = {})
  - const filterId = `${options.name}Filter`;
  th(scope= 'col')
    .dropdown
      a.dropdown-toggle(href='#' role='button' id= filterId data-toggle='dropdown')= property
      .dropdown-menu.dropdown-menu-right(aria-labeledby= filterId)
        h6.dropdown-header= `filter by ${_.toLower(property)}`
        form.px-2.py-2
          select.form-control.form-control-sm(name= options.name)
            each choice in options.choices
              option(value= choice.id selected= (choice.id === options.selected))= choice[options.title]
          input.btn.btn-outline-success.btn-sm.mt-2(type= 'submit' value= 'Apply')

